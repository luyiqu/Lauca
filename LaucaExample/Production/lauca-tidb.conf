## The currently supported databasesï¼šTiDB, MySQL, PostgreSQL, Oracle
databaseType = MySQL

# workload trace can be captured by using skywalking, the skywalking and the specific usage is shown in README
useSkywalking =true  

log4jConfigFile = .//log4j.properties


## workload trace location
laucaLogDir = .//lauca-log

## Whether to automatically read Schema from the real database, for TiDB, 
## currently also need to read from ddl because it does not have foreign key.
useAutoSchemaReader = true

## Only TiDB needs to tell the ddl location
#databaseSchemaFile=.//tpcc_schema.txt
#ddlFile = .//tpcc_ddl.txt

## Simulation of the data (generated by Lauca) path of the database
laucaTablesDir = .//testdata//tables

## Information about the real database, used to obtain information about data characteristics
originalDatabaseIp = 127.0.0.1
originalDatabasePort = 4000
originalDatabaseName = tpcc_20
originalDatabaseUserName = root
originalDatabasePasswd = root
	
## Information about the simulated database (i.e. the database generated by Lauca)
laucaDatabaseIp = 127.0.0.1
laucaDatabasePort = 4000
laucaDatabaseName = tpcc_20
laucaDatabaseUserName = root
laucaDatabasePasswd = root

## Evaluation time in seconds (usually the value set will be less than the length of the running log)
testTimeLength = 60
	
## Number of workload generation threads (number of all test threads and number of test threads in the current JVM)
allTestThreadNum = 20

localTestThreadNum = 20

## Database isolation level. 0: serializable; 
## 1: repeatable read; 2: read committed; 3: read uncommitted
transactionIsolation = 2
	
## Workload generation type. 0: no throughput control, generated at maximum throughput (while, non-blocking);
## 1: load at specified throughput (controlled using timer)
loadingType = 0
## Throughput scaling factor: ratio of test throughput to actual throughput
throughputScaleFactor = 1
## Load the workload with a fixed throughput, and it is ignored when the following value of -1 
fixedThroughput = -1

## Intermediate state file for data characteristics
dataCharacteristicSaveFile = .//testdata//dataCharacteristicSaveFile.obj

## if enableAnonymity is set as true, this file appoints the file location
anonymitySaveFile = .//testdata//anonymitySaveFile.obj

## intermediate state files for transaction logic
txLogicSaveFile = .//testdata//txLogicSaveFile.obj

## intermediate state files for data access distribution
distributionSaveFile = .//testdata//distributionSaveFile.obj

## Documentation of stored procedures, if useStoredProcedure is set as true
storedProcedureFile = .//storedProcedure.txt
	
## Whether to enable blurring
enableAnonymity = false

## Whether to use StoredProcedure
useStoredProcedure = false	

## As a data generator, the id of the current node (counting from 0)
machineId = 0

## Total number of deployed nodes of the data generator
machineNum = 1

## Number of data generation threads on each node 
## (here it is assumed that the number of data generation on each node is the same)
singleMachineThreadNum = 8	
	
	
## 0: data access distribution for the entire load cycle; 
## 1: data access distribution based on a time window; 
## 2: data access distribution based on a continuous time window.
## 3: Associated data access distribution with multiple parameters; 
## -1: No data distribution, only SQL parameters generated according to the attribute generation function
distributionCategory = 2
	
## If you want to generate parameters based on the data access distribution of the full 
load cycle only when doing experiments, you can set the following parameter to true
expFullLifeCycleDist = false
	
## The data size of the sampled data when counting the global data distribution
samplingSize = 1000000
	
## The size of the time window in seconds when the statistics are accessed from the distribution
timeWindowSize = 1

## The number of threads that access the distribution of statistics
statThreadNum = 8

## Maximum number of instances per transaction template	
maxSizeOfTxDataList = 100000
highFrequencyItemNum = 10
## Number of segments of the histogram
intervalNum = 50
	
	
## Transaction logic control parameter, true means contains this type of transaction logic, 
false means does not contain this type of transaction logic
equalRelationFlag = true 
includeRelationFlag = true
linearRelationFlag = true

## Structure information (cycle average:q)
## The number of executions and the percentage of branch executions) 
## are necessarily counted and are not affected by this configuration item
multipleLogicFlag = true
	
## bug fix: removing the small probability relationship 
## see Util.java
minProbability = 0.01
	
## Minimum transaction instance data size to support linear dependency analysis, 
## not particularly small, 100 or more recommended
minTxDataSize4LinearRelation = 100

##Number of pairs of random transaction instances
randomPairs = 10000
	
## Performance statistics time window
statWindowSize = 1

## The seed size of String used to generate String typed column
seedStringSize = 1000

# Number of newly added columns
fakeColumnRate = 0.0

# Augment or reduce the number of data in the table
dataIncreaseRate = 0

backwardLength = 6

quantileNum = 10

usePartitionRule = true

usePartitionCardinalityControl = true
